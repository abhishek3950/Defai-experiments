"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.symbolToNetworkId = exports.UserProvidedNetworkSymbol = exports.networkIDtoSymbol = exports.NetworkID = void 0;
exports.isUserProvidedNetwork = isUserProvidedNetwork;
const lodash_1 = require("lodash");
// note: copied from https://github.com/nomiclabs/hardhat/blob/master/packages/hardhat-etherscan/src/network/prober.ts
var NetworkID;
(function (NetworkID) {
    NetworkID[NetworkID["MAINNET"] = 1] = "MAINNET";
    NetworkID[NetworkID["HOLESKY"] = 17000] = "HOLESKY";
    NetworkID[NetworkID["SEPOLIA"] = 11155111] = "SEPOLIA";
    NetworkID[NetworkID["GNOSIS"] = 100] = "GNOSIS";
    NetworkID[NetworkID["BASE"] = 8453] = "BASE";
    NetworkID[NetworkID["BSC"] = 56] = "BSC";
    NetworkID[NetworkID["OPTIMISTIC_ETHEREUM"] = 10] = "OPTIMISTIC_ETHEREUM";
    NetworkID[NetworkID["POLYGON"] = 137] = "POLYGON";
    NetworkID[NetworkID["ARBITRUM_ONE"] = 42161] = "ARBITRUM_ONE";
    NetworkID[NetworkID["AVALANCHE"] = 43114] = "AVALANCHE";
    NetworkID[NetworkID["CELO"] = 42220] = "CELO";
})(NetworkID || (exports.NetworkID = NetworkID = {}));
exports.networkIDtoSymbol = {
    [NetworkID.MAINNET]: 'mainnet',
    [NetworkID.HOLESKY]: 'holesky',
    [NetworkID.SEPOLIA]: 'sepolia',
    [NetworkID.GNOSIS]: 'gnosis',
    [NetworkID.BASE]: 'base',
    [NetworkID.BSC]: 'bsc',
    [NetworkID.OPTIMISTIC_ETHEREUM]: 'optimism',
    [NetworkID.POLYGON]: 'polygon',
    [NetworkID.ARBITRUM_ONE]: 'arbitrumOne',
    [NetworkID.AVALANCHE]: 'avalanche',
    [NetworkID.CELO]: 'celo',
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
const UserProvidedNetworkSymbol = (s) => s;
exports.UserProvidedNetworkSymbol = UserProvidedNetworkSymbol;
function isUserProvidedNetwork(symbol, userNetworks) {
    return !!(symbol in userNetworks && userNetworks[symbol]);
}
exports.symbolToNetworkId = (0, lodash_1.invert)(exports.networkIDtoSymbol);
//# sourceMappingURL=networks.js.map