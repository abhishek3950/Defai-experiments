"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ERC721__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "string",
                name: "name_",
                type: "string",
            },
            {
                internalType: "string",
                name: "symbol_",
                type: "string",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "approved",
                type: "address",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "Approval",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "operator",
                type: "address",
            },
            {
                indexed: false,
                internalType: "bool",
                name: "approved",
                type: "bool",
            },
        ],
        name: "ApprovalForAll",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "Transfer",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "approve",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
        ],
        name: "balanceOf",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "getApproved",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                internalType: "address",
                name: "operator",
                type: "address",
            },
        ],
        name: "isApprovedForAll",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "name",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "ownerOf",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "safeTransferFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
        ],
        name: "safeTransferFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "operator",
                type: "address",
            },
            {
                internalType: "bool",
                name: "approved",
                type: "bool",
            },
        ],
        name: "setApprovalForAll",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes4",
                name: "interfaceId",
                type: "bytes4",
            },
        ],
        name: "supportsInterface",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "symbol",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "tokenURI",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "transferFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x608060405234801562000010575f80fd5b506040516200133738038062001337833981016040819052620000339162000116565b5f62000040838262000208565b5060016200004f828262000208565b505050620002d0565b634e487b7160e01b5f52604160045260245ffd5b5f82601f8301126200007c575f80fd5b81516001600160401b038082111562000099576200009962000058565b604051601f8301601f19908116603f01168101908282118183101715620000c457620000c462000058565b81604052838152602092508683858801011115620000e0575f80fd5b5f91505b83821015620001035785820183015181830184015290820190620000e4565b5f93810190920192909252949350505050565b5f806040838503121562000128575f80fd5b82516001600160401b03808211156200013f575f80fd5b6200014d868387016200006c565b9350602085015191508082111562000163575f80fd5b5062000172858286016200006c565b9150509250929050565b600181811c908216806200019157607f821691505b602082108103620001b057634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111562000203575f81815260208120601f850160051c81016020861015620001de5750805b601f850160051c820191505b81811015620001ff57828155600101620001ea565b5050505b505050565b81516001600160401b0381111562000224576200022462000058565b6200023c816200023584546200017c565b84620001b6565b602080601f83116001811462000272575f84156200025a5750858301515b5f19600386901b1c1916600185901b178555620001ff565b5f85815260208120601f198616915b82811015620002a25788860151825594840194600190910190840162000281565b5085821015620002c057878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b61105980620002de5f395ff3fe608060405234801561000f575f80fd5b50600436106100bc575f3560e01c80636352211e116100795780636352211e1461016357806370a082311461017657806395d89b4114610197578063a22cb4651461019f578063b88d4fde146101b2578063c87b56dd146101c5578063e985e9c5146101d8575f80fd5b806301ffc9a7146100c057806306fdde03146100e8578063081812fc146100fd578063095ea7b31461012857806323b872dd1461013d57806342842e0e14610150575b5f80fd5b6100d36100ce366004610bd7565b6101eb565b60405190151581526020015b60405180910390f35b6100f061023c565b6040516100df9190610c3f565b61011061010b366004610c51565b6102cb565b6040516001600160a01b0390911681526020016100df565b61013b610136366004610c83565b6102f0565b005b61013b61014b366004610cab565b610409565b61013b61015e366004610cab565b61043a565b610110610171366004610c51565b610454565b610189610184366004610ce4565b610488565b6040519081526020016100df565b6100f061050c565b61013b6101ad366004610cfd565b61051b565b61013b6101c0366004610d4a565b61052a565b6100f06101d3366004610c51565b610562565b6100d36101e6366004610e1f565b6105d2565b5f6001600160e01b031982166380ac58cd60e01b148061021b57506001600160e01b03198216635b5e139f60e01b145b8061023657506301ffc9a760e01b6001600160e01b03198316145b92915050565b60605f805461024a90610e50565b80601f016020809104026020016040519081016040528092919081815260200182805461027690610e50565b80156102c15780601f10610298576101008083540402835291602001916102c1565b820191905f5260205f20905b8154815290600101906020018083116102a457829003601f168201915b5050505050905090565b5f6102d5826105ff565b505f908152600460205260409020546001600160a01b031690565b5f6102fa82610454565b9050806001600160a01b0316836001600160a01b03160361036c5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b0382161480610388575061038881336105d2565b6103fa5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610363565b6104048383610635565b505050565b61041333826106a2565b61042f5760405162461bcd60e51b815260040161036390610e88565b610404838383610700565b61040483838360405180602001604052805f81525061052a565b5f818152600260205260408120546001600160a01b0316806102365760405162461bcd60e51b815260040161036390610ed5565b5f6001600160a01b0382166104f15760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610363565b506001600160a01b03165f9081526003602052604090205490565b60606001805461024a90610e50565b610526338383610862565b5050565b61053433836106a2565b6105505760405162461bcd60e51b815260040161036390610e88565b61055c8484848461092b565b50505050565b606061056d826105ff565b5f61058260408051602081019091525f815290565b90505f8151116105a05760405180602001604052805f8152506105cb565b806105aa8461095e565b6040516020016105bb929190610f07565b6040516020818303038152906040525b9392505050565b6001600160a01b039182165f90815260056020908152604080832093909416825291909152205460ff1690565b5f818152600260205260409020546001600160a01b03166106325760405162461bcd60e51b815260040161036390610ed5565b50565b5f81815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061066982610454565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b5f806106ad83610454565b9050806001600160a01b0316846001600160a01b031614806106d457506106d481856105d2565b806106f85750836001600160a01b03166106ed846102cb565b6001600160a01b0316145b949350505050565b826001600160a01b031661071382610454565b6001600160a01b0316146107395760405162461bcd60e51b815260040161036390610f35565b6001600160a01b03821661079b5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610363565b826001600160a01b03166107ae82610454565b6001600160a01b0316146107d45760405162461bcd60e51b815260040161036390610f35565b5f81815260046020908152604080832080546001600160a01b03199081169091556001600160a01b038781168086526003855283862080545f1901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b0316036108bf5760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b6044820152606401610363565b6001600160a01b038381165f81815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610936848484610700565b610942848484846109ee565b61055c5760405162461bcd60e51b815260040161036390610f7a565b60605f61096a83610aeb565b60010190505f8167ffffffffffffffff81111561098957610989610d36565b6040519080825280601f01601f1916602001820160405280156109b3576020820181803683370190505b5090508181016020015b5f19016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846109bd57509392505050565b5f6001600160a01b0384163b15610ae057604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610a31903390899088908890600401610fcc565b6020604051808303815f875af1925050508015610a6b575060408051601f3d908101601f19168201909252610a6891810190611008565b60015b610ac6573d808015610a98576040519150601f19603f3d011682016040523d82523d5f602084013e610a9d565b606091505b5080515f03610abe5760405162461bcd60e51b815260040161036390610f7a565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506106f8565b506001949350505050565b5f8072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610b295772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610b55576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610b7357662386f26fc10000830492506010015b6305f5e1008310610b8b576305f5e100830492506008015b6127108310610b9f57612710830492506004015b60648310610bb1576064830492506002015b600a83106102365760010192915050565b6001600160e01b031981168114610632575f80fd5b5f60208284031215610be7575f80fd5b81356105cb81610bc2565b5f5b83811015610c0c578181015183820152602001610bf4565b50505f910152565b5f8151808452610c2b816020860160208601610bf2565b601f01601f19169290920160200192915050565b602081525f6105cb6020830184610c14565b5f60208284031215610c61575f80fd5b5035919050565b80356001600160a01b0381168114610c7e575f80fd5b919050565b5f8060408385031215610c94575f80fd5b610c9d83610c68565b946020939093013593505050565b5f805f60608486031215610cbd575f80fd5b610cc684610c68565b9250610cd460208501610c68565b9150604084013590509250925092565b5f60208284031215610cf4575f80fd5b6105cb82610c68565b5f8060408385031215610d0e575f80fd5b610d1783610c68565b915060208301358015158114610d2b575f80fd5b809150509250929050565b634e487b7160e01b5f52604160045260245ffd5b5f805f8060808587031215610d5d575f80fd5b610d6685610c68565b9350610d7460208601610c68565b925060408501359150606085013567ffffffffffffffff80821115610d97575f80fd5b818701915087601f830112610daa575f80fd5b813581811115610dbc57610dbc610d36565b604051601f8201601f19908116603f01168101908382118183101715610de457610de4610d36565b816040528281528a6020848701011115610dfc575f80fd5b826020860160208301375f60208483010152809550505050505092959194509250565b5f8060408385031215610e30575f80fd5b610e3983610c68565b9150610e4760208401610c68565b90509250929050565b600181811c90821680610e6457607f821691505b602082108103610e8257634e487b7160e01b5f52602260045260245ffd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b602080825260189082015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604082015260600190565b5f8351610f18818460208801610bf2565b835190830190610f2c818360208801610bf2565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b03858116825284166020820152604081018390526080606082018190525f90610ffe90830184610c14565b9695505050505050565b5f60208284031215611018575f80fd5b81516105cb81610bc256fea264697066735822122088380f7a5f4131074effa26ad540c3eb7890833fbb7baedee852707f6b81a8d564736f6c63430008150033";
const isSuperArgs = (xs) => xs.length > 1;
class ERC721__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(name_, symbol_, overrides) {
        return super.getDeployTransaction(name_, symbol_, overrides || {});
    }
    deploy(name_, symbol_, overrides) {
        return super.deploy(name_, symbol_, overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.ERC721__factory = ERC721__factory;
ERC721__factory.bytecode = _bytecode;
ERC721__factory.abi = _abi;
