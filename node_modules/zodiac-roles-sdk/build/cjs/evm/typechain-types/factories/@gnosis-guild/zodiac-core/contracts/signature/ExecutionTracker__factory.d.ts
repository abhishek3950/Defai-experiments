import { ContractFactory, ContractTransactionResponse } from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type { ExecutionTracker, ExecutionTrackerInterface } from "../../../../../@gnosis-guild/zodiac-core/contracts/signature/ExecutionTracker";
type ExecutionTrackerConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class ExecutionTracker__factory extends ContractFactory {
    constructor(...args: ExecutionTrackerConstructorParams);
    getDeployTransaction(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ContractDeployTransaction>;
    deploy(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ExecutionTracker & {
        deploymentTransaction(): ContractTransactionResponse;
    }>;
    connect(runner: ContractRunner | null): ExecutionTracker__factory;
    static readonly bytecode = "0x608060405234801561000f575f80fd5b506101638061001d5f395ff3fe608060405234801561000f575f80fd5b5060043610610034575f3560e01c806369ecc3cf14610038578063e29dfba81461004d575b5f80fd5b61004b6100463660046100e1565b61008b565b005b61007761005b3660046100f8565b5f60208181529281526040808220909352908152205460ff1681565b604051901515815260200160405180910390f35b335f90815260208181526040808320848452825291829020805460ff1916600117905590518281527f89a77869d7b8125ba16e08a92ddc8cc26fb1fa47241971167954489a5e66c255910160405180910390a150565b5f602082840312156100f1575f80fd5b5035919050565b5f8060408385031215610109575f80fd5b82356001600160a01b038116811461011f575f80fd5b94602093909301359350505056fea26469706673582212209728f93827253a1333572377672bf089d466b11c0ced44a4b55dadb42fbc9dbd64736f6c63430008150033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly name: "HashAlreadyConsumed";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly name: "HashExecuted";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly name: "HashInvalidated";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly name: "consumed";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "hash";
            readonly type: "bytes32";
        }];
        readonly name: "invalidate";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): ExecutionTrackerInterface;
    static connect(address: string, runner?: ContractRunner | null): ExecutionTracker;
}
export {};
