import { type ContractRunner } from "ethers";
import type { ICustomCondition, ICustomConditionInterface } from "../../../../contracts/adapters/Types.sol/ICustomCondition";
export declare class ICustomCondition__factory {
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "value";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }, {
            readonly internalType: "enum Enum.Operation";
            readonly name: "operation";
            readonly type: "uint8";
        }, {
            readonly internalType: "uint256";
            readonly name: "location";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "size";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes12";
            readonly name: "extra";
            readonly type: "bytes12";
        }];
        readonly name: "check";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "success";
            readonly type: "bool";
        }, {
            readonly internalType: "bytes32";
            readonly name: "reason";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): ICustomConditionInterface;
    static connect(address: string, runner?: ContractRunner | null): ICustomCondition;
}
