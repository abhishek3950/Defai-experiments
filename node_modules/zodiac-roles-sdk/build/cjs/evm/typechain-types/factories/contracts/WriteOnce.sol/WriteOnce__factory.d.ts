import { ContractFactory, ContractTransactionResponse } from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { WriteOnce, WriteOnceInterface } from "../../../contracts/WriteOnce.sol/WriteOnce";
type WriteOnceConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class WriteOnce__factory extends ContractFactory {
    constructor(...args: WriteOnceConstructorParams);
    getDeployTransaction(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ContractDeployTransaction>;
    deploy(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<WriteOnce & {
        deploymentTransaction(): ContractTransactionResponse;
    }>;
    connect(runner: ContractRunner | null): WriteOnce__factory;
    static readonly bytecode = "0x60c0610034600b8282823980515f1a60731461002857634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe7300000000000000000000000000000000000000003014608060405260043610603c575f3560e01c8063ba9a91a5146040578063cf8a37af146059575b5f80fd5b60465f81565b6040519081526020015b60405180910390f35b607373ce0042b868300000d44a59004da54a005ffdcf9f81565b6040516001600160a01b039091168152602001605056fea264697066735822122074d354decc45dc84b8026430806d2db470e59659f54699416a359fc006da150b64736f6c63430008150033";
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly name: "SALT";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "SINGLETON_FACTORY";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): WriteOnceInterface;
    static connect(address: string, runner?: ContractRunner | null): WriteOnce;
}
export {};
