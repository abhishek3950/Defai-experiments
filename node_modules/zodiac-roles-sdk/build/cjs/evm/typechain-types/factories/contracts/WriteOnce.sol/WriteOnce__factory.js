"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WriteOnce__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "SALT",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "SINGLETON_FACTORY",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x60c0610034600b8282823980515f1a60731461002857634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe7300000000000000000000000000000000000000003014608060405260043610603c575f3560e01c8063ba9a91a5146040578063cf8a37af146059575b5f80fd5b60465f81565b6040519081526020015b60405180910390f35b607373ce0042b868300000d44a59004da54a005ffdcf9f81565b6040516001600160a01b039091168152602001605056fea264697066735822122074d354decc45dc84b8026430806d2db470e59659f54699416a359fc006da150b64736f6c63430008150033";
const isSuperArgs = (xs) => xs.length > 1;
class WriteOnce__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.WriteOnce__factory = WriteOnce__factory;
WriteOnce__factory.bytecode = _bytecode;
WriteOnce__factory.abi = _abi;
