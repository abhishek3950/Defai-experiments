import { ContractFactory, ContractTransactionResponse } from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Decoder, DecoderInterface } from "../../contracts/Decoder";
type DecoderConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class Decoder__factory extends ContractFactory {
    constructor(...args: DecoderConstructorParams);
    getDeployTransaction(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ContractDeployTransaction>;
    deploy(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<Decoder & {
        deploymentTransaction(): ContractTransactionResponse;
    }>;
    connect(runner: ContractRunner | null): Decoder__factory;
    static readonly bytecode = "0x60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220894feeaa2b169730e1338b28f089956958f379612fbd0bdc206dea97527a883364736f6c63430008150033";
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly name: "CalldataOutOfBounds";
        readonly type: "error";
    }];
    static createInterface(): DecoderInterface;
    static connect(address: string, runner?: ContractRunner | null): Decoder;
}
export {};
