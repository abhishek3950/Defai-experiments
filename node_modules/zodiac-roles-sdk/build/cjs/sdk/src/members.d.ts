import { ChainId } from "zodiac-roles-deployments";
type Options = ({
    /** ID of the Chain where the Roles mod is deployed */
    chainId: ChainId;
    /** Address of the roles mod */
    address: `0x${string}`;
} | {
    /** The addresses of all current members of this role. If not specified, they will be fetched from the subgraph. */
    currentMembers: readonly `0x${string}`[];
}) & {
    /**  The mode to use for updating the set of members of the role:
     *  - "replace": The role will have only the passed members, meaning that all other current members will be removed from the role
     *  - "extend": The role will keep its current members and will additionally get the passed members
     *  - "remove": All passed members will be removed from the role
     */
    mode: "replace" | "extend" | "remove";
    log?: boolean | ((message: string) => void);
};
/**
 * Returns a set of encoded call data to be sent to the Roles mod for updating the members of the given role.
 *
 * @param roleKey The key of the role
 * @param members Array of member addresses
 */
export declare const applyMembers: (roleKey: `0x${string}`, members: readonly `0x${string}`[], options: Options) => Promise<`0x${string}`[]>;
export {};
