/**
 *  Splits targets `a` granted by `a` that are not granted by `b`
 */
import { Target } from "zodiac-roles-deployments";
/**
 * Given two sets of targets, split targets in the first `combined` set into the `split` set and the remainder. Returns the remainder targets.
 * Targets appearing in `combined` and `split` will have their conditions split so that the combination of the `split` and `remainder` targets is equal to `combined`.
 * @returns All targets from `combined` that are not included in `split`.
 * @throws If it is impossible to split the condition of a target present in `combined` and `split`.
 */
export declare const splitTargets: (combined: readonly Target[], split: readonly Target[]) => Target[];
