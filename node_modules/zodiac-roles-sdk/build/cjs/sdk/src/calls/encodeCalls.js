"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.encodeCalls = void 0;
const typechain_types_1 = require("../../../evm/typechain-types");
const conditions_1 = require("../conditions");
const rolesInterface = typechain_types_1.Roles__factory.createInterface();
const encodeCalls = (roleKey, calls) => {
    return calls.map((call) => {
        switch (call.call) {
            case "allowTarget": {
                return rolesInterface.encodeFunctionData("allowTarget", [
                    roleKey,
                    call.targetAddress,
                    call.executionOptions,
                ]);
            }
            case "scopeTarget": {
                return rolesInterface.encodeFunctionData("scopeTarget", [
                    roleKey,
                    call.targetAddress,
                ]);
            }
            case "revokeTarget": {
                return rolesInterface.encodeFunctionData("revokeTarget", [
                    roleKey,
                    call.targetAddress,
                ]);
            }
            case "allowFunction": {
                return rolesInterface.encodeFunctionData("allowFunction", [
                    roleKey,
                    call.targetAddress,
                    call.selector,
                    call.executionOptions,
                ]);
            }
            case "scopeFunction": {
                return rolesInterface.encodeFunctionData("scopeFunction", [
                    roleKey,
                    call.targetAddress,
                    call.selector,
                    (0, conditions_1.flattenCondition)(call.condition).map((c) => (Object.assign(Object.assign({}, c), { compValue: c.compValue || "0x" }))),
                    call.executionOptions,
                ]);
            }
            case "revokeFunction": {
                return rolesInterface.encodeFunctionData("revokeFunction", [
                    roleKey,
                    call.targetAddress,
                    call.selector,
                ]);
            }
        }
    });
};
exports.encodeCalls = encodeCalls;
