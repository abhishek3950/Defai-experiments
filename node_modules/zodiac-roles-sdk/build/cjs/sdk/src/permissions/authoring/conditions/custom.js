"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.avatarIsOwnerOfErc721 = void 0;
const ethers_1 = require("ethers");
const zodiac_roles_deployments_1 = require("zodiac-roles-deployments");
const AVATAR_IS_OWNER_OF_ERC_721_ADDRESS = "0x91B1bd7BCC5E623d5CE76b0152253499a9C819d1";
/**
 * Asserts that the value is scope represents an ERC721 token ID owned by the avatar.
 * Assumes that the call target is the ERC721 contract.
 */
const avatarIsOwnerOfErc721 = (abiType) => {
    if (abiType.type !== "uint256") {
        throw new Error("`avatarIsOwnerOfErc721` is only supported for uint256 params");
    }
    return {
        paramType: zodiac_roles_deployments_1.ParameterType.Static,
        operator: zodiac_roles_deployments_1.Operator.Custom,
        compValue: encodeCustomCompValue(AVATAR_IS_OWNER_OF_ERC_721_ADDRESS),
    };
};
exports.avatarIsOwnerOfErc721 = avatarIsOwnerOfErc721;
const encodeCustomCompValue = (customConditionAddress, extra = "0x") => {
    const extraHex = (0, ethers_1.hexlify)(extra).slice(2);
    if (extraHex.length > 24) {
        // 12 bytes
        throw new Error("Extra data is too long");
    }
    return ((0, ethers_1.getAddress)(customConditionAddress).toLowerCase() +
        extraHex.padEnd(24, "0"));
};
