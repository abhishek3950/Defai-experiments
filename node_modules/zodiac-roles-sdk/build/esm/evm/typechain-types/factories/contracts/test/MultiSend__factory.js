/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, ContractFactory, Interface, } from "ethers";
const _abi = [
    {
        inputs: [],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "transactions",
                type: "bytes",
            },
        ],
        name: "multiSend",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
];
const _bytecode = "0x60a060405234801561000f575f80fd5b503060805260805161024361002b5f395f604001526102435ff3fe60806040526004361061001d575f3560e01c80638d80ff0a14610021575b5f80fd5b61003461002f366004610162565b610036565b005b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036100cb5760405162461bcd60e51b815260206004820152603060248201527f4d756c746953656e642073686f756c64206f6e6c792062652063616c6c65642060448201526f1d9a584819195b1959d85d1958d85b1b60821b606482015260840160405180910390fd5b805160205b81811015610149578083015160f81c6001820184015160601c60158301850151603584018601516055850187015f855f811461011357600181146101225761012c565b5f808585888a5af1915061012c565b5f808585895af491505b5080610136575f80fd5b50508060550185019450505050506100d0565b505050565b634e487b7160e01b5f52604160045260245ffd5b5f60208284031215610172575f80fd5b813567ffffffffffffffff80821115610189575f80fd5b818401915084601f83011261019c575f80fd5b8135818111156101ae576101ae61014e565b604051601f8201601f19908116603f011681019083821181831017156101d6576101d661014e565b816040528281528760208487010111156101ee575f80fd5b826020860160208301375f92810160200192909252509594505050505056fea26469706673582212205dda57349849821b102727508d0e8d8a4b242a78b269d166023a4d8f5d6b0e9564736f6c63430008150033";
const isSuperArgs = (xs) => xs.length > 1;
export class MultiSend__factory extends ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static bytecode = _bytecode;
    static abi = _abi;
    static createInterface() {
        return new Interface(_abi);
    }
    static connect(address, runner) {
        return new Contract(address, _abi, runner);
    }
}
