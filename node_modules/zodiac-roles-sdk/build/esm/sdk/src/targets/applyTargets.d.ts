import { ChainId, Target } from "zodiac-roles-deployments";
import { Call } from "../calls";
type Options = ({
    /** ID of the chain where the Roles mod is deployed */
    chainId: ChainId;
    /** Address of the roles mod */
    address: `0x${string}`;
} | {
    /** The targets that are currently configured for the role */
    currentTargets: readonly Target[];
}) & {
    /**  The mode to use for updating the targets of the role:
     *  - "replace": The role will have only the passed targets, meaning that all other currently configured targets will be revoked from the role
     *  - "extend": The role will keep its current targets and will additionally be granted the passed targets
     *  - "remove": All passed targets will be revoked from the role
     */
    mode: "replace" | "extend" | "remove";
    log?: boolean | ((message: string) => void);
};
/**
 * Returns a set of encoded call data to be sent to the Roles mod for updating the targets of the given role.
 *
 * @param roleKey The key of the role to update
 * @param targets Targets to apply to the role
 * @param options Options for the update
 */
export declare const applyTargets: (roleKey: `0x${string}`, targets: Target[], options: Options) => Promise<`0x${string}`[]>;
/**
 * Computes the set of calls to update the targets of a role
 * @param current targets of the role that shall be updated
 * @param next targets of the role describing the desired target state
 * @returns The set of calls to make to the Roles modifier owning the role
 */
export declare const replaceTargets: (current: readonly Target[], next: readonly Target[]) => Call[];
export {};
