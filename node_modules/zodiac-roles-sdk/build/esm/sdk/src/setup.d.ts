import { Permission, PermissionSet } from "./permissions";
interface RoleConfig {
    key: string;
    members: `0x${string}`[];
    permissions: readonly (Permission | PermissionSet)[];
}
/**
 * Applies the given `roles` configurations to the Roles mod at `address`.
 *
 * **Warning:** This function does not check if any of the roles are already configured on the Roles mod. It will not revoke any permissions or members from existing roles.
 **/
export declare const setUpRoles: ({ address, roles, }: {
    address: `0x${string}`;
    roles: RoleConfig[];
}) => ({
    to: string;
    data: `0x${string}`;
    value: string;
} | {
    to: `0x${string}`;
    data: string;
    value: string;
})[];
interface Config {
    avatar: `0x${string}`;
    target?: `0x${string}`;
    owner?: `0x${string}`;
    roles?: RoleConfig[];
    multiSendAddresses?: readonly `0x${string}`[];
    enableOnTarget?: boolean;
    saltNonce?: `0x${string}`;
}
export declare const setUpRolesMod: ({ avatar, target, owner, roles, multiSendAddresses, enableOnTarget, saltNonce, }: Config) => {
    to: string;
    data: string;
    value: string;
}[];
export {};
