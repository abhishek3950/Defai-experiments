import { BytesLike, ParamType } from "ethers";
import { Annotation, Condition } from "zodiac-roles-deployments";
import { ConditionFunction } from "./authoring/conditions/types";
export type AbiType = string | ParamType;
export interface ExecutionFlags {
    send?: boolean;
    delegatecall?: boolean;
}
export type TargetPermission = {
    targetAddress: `0x${string}`;
} & ExecutionFlags;
export type FunctionPermission = ({
    selector: `0x${string}`;
} | {
    signature: string;
}) & {
    targetAddress: `0x${string}`;
    condition?: Condition | ConditionFunction<BytesLike>;
} & ExecutionFlags;
export type FunctionPermissionCoerced = {
    selector: `0x${string}`;
    targetAddress: `0x${string}`;
    condition?: Condition;
} & ExecutionFlags;
export type Permission = TargetPermission | FunctionPermission;
export type PermissionCoerced = TargetPermission | FunctionPermissionCoerced;
export type PermissionSet = Permission[] & {
    annotation?: Annotation;
};
